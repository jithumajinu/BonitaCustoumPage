angular.module("gettext", []), angular.module("gettext").constant("gettext", function(a) {
    return a
}), angular.module("gettext")
.service('customi18n', function () {
  var customi18nLang = {};
  customi18nLang.en = function() {
    return [ {
               "key": "",
               "value": ""
              }
           ];
  };

  customi18nLang.ja = function() {
          return [
            {
              "key": "General",
              "value": "汎用マスタ"
            },
  {
    "key": "General Key",
    "value": "汎用キー情報マスタ"
  },

  {
    "key": "Opition Config",
    "value": "オプションリストマスタ"
  },
  {
    "key": "Role Hierarchy",
    "value": "役割定義マスタ"
  },
  {
    "key": "Receive Mail",
    "value": "受信メール解析項目マスタ"
  },
  {
    "key": "Send Mail Conversion",
    "value": "送信メール可変部項目マスタ"
  },
  {
    "key": "Close",
    "value": "閉じる"
  },
  {
    "key": "Add New",
    "value": "追加"
  },
  {
    "key": "Upadate",
    "value": "更新"
  },
  {
    "key": "Delete",
    "value": "削除"
  },
  {
    "key": "Master Name",
    "value": "マスター名称"
  },
  {
    "key": "Key CD Length",
    "value": "キーCD桁数"
  },
  {
    "key": "keyCDLen",
    "value": "キーCD桁数"
  },
  {
    "key": "Key Name",
    "value": "キー名称"
  },
  {
    "key": "Data Name",
    "value": "データ名称"
  },
  {
    "key": "String Data Length",
    "value": "データ桁数"
  },
  {
    "key": "Numeric Data Length",
    "value": "データ桁数（整数)"
  },
  {
    "key": "After Decimal Point Length",
    "value": "データ桁数（小数点以下)"
  },
  {
    "key": "Start Date",
    "value": "有効開始日"
  },
  {
    "key": "End Date",
    "value": "有効終了日"
  },
  {
    "key": "Created Date",
    "value": "作成日"
  },
  {
    "key": "Updated Date",
    "value": "更新日"
  },
  {
    "key": "Date From",
    "value": "有効開始日"
  },

  {
    "key": "Date To",
    "value": "有効終了日"
  },
  {
    "key": "Master Type Id",
    "value": "マスター種別ID"
  },
  {
    "key": "Please Enter either stringItem or numericItem",
    "value": "(文字データ)または、(数値データ)を入力してください"
  },
  {
    "key": "Invalid!",
    "value": "無効!"
  },
  {
    "key": "User Identification String",
    "value": "ユーザ識別文字列"
  },
  {
    "key": "Cancel",
    "value": "キャンセル"
  },
  {
    "key": "Confirm",
    "value": "確認"
  },
  {
    "key": "Yes",
    "value": "はい"
  },
  {
    "key": "No",
    "value": "いいえ"
  },
  {
    "key": "Confirmation for Update",
    "value": "更新の確認"
  },
  {
    "key": "Are you sure you want to update this record?",
    "value": "このレコードを更新してもよろしいですか？"
  },



  {
    "key": "Item Key",
    "value": "キー"
  },
  {
    "key": "String Item",
    "value": "文字データ"
  },
  {
    "key": "Are you sure you want to delete this record?",
    "value": "削除してもよろしいですか？"
  },
  {
    "key": "Confirmation for Delete",
    "value": "削除の確認"
  },
  {
    "key": "Please Enter Numeric Data Length",
    "value": "(データ桁数（整数))に整数値を入力してください"
  },
  {
    "key": "Please Enter Decimal Point Length",
    "value": "(データ桁数（小数点以下))に小数値を入力してください"
  },
  {
    "key": "Please Enter either (String Data Length )or (Numeric Data Length and Decimal Point Length)",
    "value": "(データ桁数 ) 、または ( データ桁数（整数) と データ桁数（小数点以下) )を入力してください"
  },
  {
    "key": "Should be less than 256",
    "value": "値は、(256)未満で入力してください"
  },

  {
    "key": "Numeric Item",
    "value": "数値データ"
  },
  {
    "key": "Role Id",
    "value": "役職別ID"
  },
  {
    "key": "Role Name",
    "value": "役職名"
  },
  {
    "key": "Role Priority",
    "value": "役職優先ランク"
  },
  {
    "key": "Item Id",
    "value": "項目ID"
  },
  {
    "key": "Identification",
    "value": "識別文字列"
  },
  {
    "key": "Item Name",
    "value": "項目名"
  },
  {
    "key": "Template Id",
    "value": "テンプレートメールID"
  },
  {
    "key": "Variable Item Cd",
    "value": "可変部項目CD"
  },
  {
    "key": "Reflection Item Name",
    "value": "反映データ項目名"
  },
  {
    "key": "Option Item Id",
    "value": "オプションID"
  },
  {
    "key": "ServiceClass",
    "value": "サービスクラス"
  },
  {
    "key": "No Setting",
    "value": "設定なし"
  },
  {
    "key": "Edition",
    "value": "エディション"
  },
  {
    "key": "OptionClass",
    "value": "オプションクラス"
  },
  {
    "key": "OptionRow",
    "value": "オプションリレーション"
  },
  {
    "key": "Description",
    "value": "オプション説明"
  },
  {
    "key": "Default Value",
    "value": "デフォルト値"
  },
  {
    "key": "Type",
    "value": "入力・選択方法"
  },
  {
    "key": "Parent Id",
    "value": "親オプションID"
  },
  {
    "key": "Relation",
    "value": "オプション間親子関係"
  },
  {
    "key": "Equal",
    "value": "あり"
  },
  {
    "key": "Opposite",
    "value": "なし"
  },
  {
    "key": "ShowFlag",
    "value": "表示設定"
  },
  {
    "key": "Sort order No",
    "value": "並び替え"
  },
  {
    "key": "readOnly",
    "value": "読み取りのみ"
  },
  {
    "key": "Has Relation",
    "value": "子オプションの有無"
  },
  {
    "key": "Submit",
    "value": "送信"
  },
  {
    "key": "Calendar",
    "value": "カレンダー"
  },
  {
    "key": "Calendar Type",
    "value": "カレンダーの種類"
  },
  {
    "key": "Calendar Date",
    "value": "カレンダーの日付"
  },
  {
    "key": "Working Type",
    "value": "ワーキングタイプ"
  },
  {
    "key": "Remark",
    "value": "リマーク"
  },
  {
    "key": "Product Item 1",
    "value": "商品アイテム1"
  },
  {
    "key": "Product Item 2",
    "value": "商品アイテム2"
  },
  {
    "key": "Product Item 3",
    "value": "商品アイテム3"
  },
  {
    "key": "Product Item 4",
    "value": "商品アイテム4"
  },
  {
    "key": "Product Item 5",
    "value": "商品アイテム5"
  },
  {
    "key": "Active Flag",
    "value": "アクティブフラグ"
  },
  {
    "key": "Mining Control",
    "value": "マイニングコントロール"
  },
  {
    "key": "Count",
    "value": "カウント"
  },
  {
    "key": "Numbering Class",
    "value": "ナンバリングクラス"
  },
  {
    "key": "SQL ID",
    "value": "SQL ID"
  },
  {
    "key": "SQL String",
    "value": "SQL文字列"
  },
  {
    "key": "Process Name",
    "value": "プロセス名"
  },
  {
    "key": "Task Name",
    "value": "タスク名"
  },
  {
    "key": "Deleted",
    "value": "削除された"
  },
  {
    "key": "Process Id",
    "value": "プロセスID"
  },
  {
    "key": "Approval Tasks",
    "value": "承認タスク"
  },
  {
    "key": "Import",
    "value": "輸入する"
  },
  {
    "key": "Unique key violation, canot allow duplication",
    "value": "一意制約に違反しています。複製は出来ません。"
  },
  {
    "key": "Edited Row Successfully Updated",
    "value": "編集した行が正常に更新されました"
  },
  {
    "key": "New Data Successfully Inserted",
    "value": "新しいデータが正常に挿入されました"
  },
  {
    "key": "Selected Row Successfully Deleted",
    "value": "選択したデータは正常に削除されました"
  },
  {
    "key": "Data Successfully Imported",
    "value": "データを正常にインポートしました"
  },
  {
    "key": "Confirmation for Import",
    "value": "インポートの確認"
  },
  {
    "key": "Are you sure you want to import this record?",
    "value": "このレコードをインポートしてもよろしいですか？"
  },
  {
    "key": "Operation Failed",
    "value": "操作に失敗しました"
  },
  {
    "key": "Failed to delete selected data.Please contact administrator",
    "value": "選択したデータを削除できませんでした。 管理者に連絡してください"
  },
  {
    "key": "The operation is fake",
    "value": "操作は偽である"
  },
  {
    "key": "Unique key cannot be null",
    "value": "ユニークキーはnullにできません"
  },
  {
    "key": "Unique key cannot be null",
    "value": "失敗！ ：データがインポートされていません"
  }
];



  };
  return customi18nLang ;
})

.factory("gettextCatalog", ["gettextPlurals", "$http", "$cacheFactory", "$interpolate", "$rootScope","locale","customi18n","$filter", function(a, b, c, d, e,locale,customi18n,$filter) {
    function f() {
        e.$broadcast("gettextLanguageChanged")
    }
    var g, h = "$$noContext",
        i = '<span id="test" title="test" class="tested">test</span>',
        j = angular.element("<span>" + i + "</span>").html() !== i,
        k = function(a) {
            return g.debug && g.currentLanguage !== g.baseLanguage ? g.debugPrefix + a : a
        },
        l = function(a) {
            return g.showTranslatedMarkers ? g.translatedMarkerPrefix + a + g.translatedMarkerSuffix : a
        };
    return g = {
        debug: !1,
        debugPrefix: "[MISSING]: ",
        showTranslatedMarkers: !1,
        translatedMarkerPrefix: "[",
        translatedMarkerSuffix: "]",
        strings: {},
        baseLanguage: "en",
        currentLanguage: "en",
        cache: c("strings"),
        setCurrentLanguage: function(a) {
            this.currentLanguage = a, f()
        },
        getCurrentLanguage: function() {
            return this.currentLanguage
        },
        setStrings: function(a, b) {
            this.strings[a] || (this.strings[a] = {});
            for (var c in b) {
                var d = b[c];
                if (j && (c = angular.element("<span>" + c + "</span>").html()), angular.isString(d) || angular.isArray(d)) {
                    var e = {};
                    e[h] = d, d = e
                }
                for (var g in d) {
                    var i = d[g];
                    d[g] = angular.isArray(i) ? i : [i]
                }
                this.strings[a][c] = d
            }
            f()
        },
        getStringForm: function(a, b, c) {
            var d = this.strings[this.currentLanguage] || {},
                e = d[a] || {},
                f = e[c || h] || [];
            return f[b]
        },

        //  generate custom i18n
        getCustomStringForm: function(a, b, c) {


         if(this.currentLanguage ==="ja"){
           var str = $filter('filter')(customi18n.ja(), {key: a})[0];
           return (str)?str.value :null
         }else{
           var str = $filter('filter')(customi18n.en(), {key: a})[0];
           return (str)?str.value :null
         }


        },

        getString: function(a, b, c) {
            return a = this.getStringForm(a, 0, c) || k(a), a = b ? d(a)(b) : a, l(a)
        },
        getCustomString: function(a, b, c) {

            return a = this.getCustomStringForm(a, 0, c) || k(a), a = b ? d(a)(b) : a, l(a)
        },
        getPlural: function(b, c, e, f, g) {
            var h = a(this.currentLanguage, b);
            return c = this.getStringForm(c, h, g) || k(1 === b ? c : e), f && (f.$count = b, c = d(c)(f)), l(c)
        },
        loadRemote: function(a) {
            return b({
                method: "GET",
                url: a,
                cache: g.cache
            }).success(function(a) {
                for (var b in a) g.setStrings(b, a[b])
            })
        }
    }
}]), angular.module("gettext").directive("translate", ["gettextCatalog", "$parse", "$animate", "$compile", "$window", function(a, b, c, d, e) {
    function f(a, b, c) {
        if (!a) throw new Error("You should add a " + b + " attribute whenever you add a " + c + " attribute.")
    }
    var g = function() {
            return String.prototype.trim ? function(a) {
                return "string" == typeof a ? a.trim() : a
            } : function(a) {
                return "string" == typeof a ? a.replace(/^\s*/, "").replace(/\s*$/, "") : a
            }
        }(),
        h = parseInt((/msie (\d+)/.exec(angular.lowercase(e.navigator.userAgent)) || [])[1], 10);
    return {
        restrict: "AE",
        terminal: !0,
        compile: function(e, i) {
            f(!i.translatePlural || i.translateN, "translate-n", "translate-plural"), f(!i.translateN || i.translatePlural, "translate-plural", "translate-n");
            var j = g(e.html()),
                k = i.translatePlural,
                l = i.translateContext;
            return 8 >= h && "<!--IE fix-->" === j.slice(-13) && (j = j.slice(0, -13)), {
                post: function(e, f, h) {
                    function i() {
                        var b;
                        k ? (e = n || (n = e.$new()), e.$count = m(e), b = a.getPlural(e.$count, j, k, null, l)) : b = a.getString(j, null, l);
                        var h = f.contents();
                        if (0 !== h.length) {
                            if (b === g(h.html())) return void(o && d(h)(e));
                            var i = angular.element("<span>" + b + "</span>");
                            d(i.contents())(e);
                            var p = i.contents();
                            c.enter(p, f), c.leave(h)
                        }
                    }
                    var m = b(h.translateN),
                        n = null,
                        o = !0;
                    h.translateN && e.$watch(h.translateN, i), e.$on("gettextLanguageChanged", i), i(), o = !1
                }
            }
        }
    }
}]), angular.module("gettext").filter("translate", ["gettextCatalog", function(a) {
    function b(b, c) {
        return a.getString(b, null, c)
    }
    return b.$stateful = !0, b
}]),
angular.module("gettext").filter("custumtranslate", ["gettextCatalog", function(a) {
    function b(b, c) {

      return a.getCustomString(b, null, c)
    }
    return b.$stateful = !0, b
}])


, angular.module("gettext").factory("gettextPlurals", function() {
    return function(a, b) {
        switch (a) {
            case "ay":
            case "bo":
            case "cgg":
            case "dz":
            case "fa":
            case "id":
            case "ja":
            case "jbo":
            case "ka":
            case "kk":
            case "km":
            case "ko":
            case "ky":
            case "lo":
            case "ms":
            case "my":
            case "sah":
            case "su":
            case "th":
            case "tt":
            case "ug":
            case "vi":
            case "wo":
            case "zh":
                return 0;
            case "is":
                return b % 10 != 1 || b % 100 == 11 ? 1 : 0;
            case "jv":
                return 0 != b ? 1 : 0;
            case "mk":
                return 1 == b || b % 10 == 1 ? 0 : 1;
            case "ach":
            case "ak":
            case "am":
            case "arn":
            case "br":
            case "fil":
            case "fr":
            case "gun":
            case "ln":
            case "mfe":
            case "mg":
            case "mi":
            case "oc":
            case "pt_BR":
            case "tg":
            case "ti":
            case "tr":
            case "uz":
            case "wa":
            case "zh":
                return b > 1 ? 1 : 0;
            case "lv":
                return b % 10 == 1 && b % 100 != 11 ? 0 : 0 != b ? 1 : 2;
            case "lt":
                return b % 10 == 1 && b % 100 != 11 ? 0 : b % 10 >= 2 && (10 > b % 100 || b % 100 >= 20) ? 1 : 2;
            case "be":
            case "bs":
            case "hr":
            case "ru":
            case "sr":
            case "uk":
                return b % 10 == 1 && b % 100 != 11 ? 0 : b % 10 >= 2 && 4 >= b % 10 && (10 > b % 100 || b % 100 >= 20) ? 1 : 2;
            case "mnk":
                return 0 == b ? 0 : 1 == b ? 1 : 2;
            case "ro":
                return 1 == b ? 0 : 0 == b || b % 100 > 0 && 20 > b % 100 ? 1 : 2;
            case "pl":
                return 1 == b ? 0 : b % 10 >= 2 && 4 >= b % 10 && (10 > b % 100 || b % 100 >= 20) ? 1 : 2;
            case "cs":
            case "sk":
                return 1 == b ? 0 : b >= 2 && 4 >= b ? 1 : 2;
            case "sl":
                return b % 100 == 1 ? 1 : b % 100 == 2 ? 2 : b % 100 == 3 || b % 100 == 4 ? 3 : 0;
            case "mt":
                return 1 == b ? 0 : 0 == b || b % 100 > 1 && 11 > b % 100 ? 1 : b % 100 > 10 && 20 > b % 100 ? 2 : 3;
            case "gd":
                return 1 == b || 11 == b ? 0 : 2 == b || 12 == b ? 1 : b > 2 && 20 > b ? 2 : 3;
            case "cy":
                return 1 == b ? 0 : 2 == b ? 1 : 8 != b && 11 != b ? 2 : 3;
            case "kw":
                return 1 == b ? 0 : 2 == b ? 1 : 3 == b ? 2 : 3;
            case "ga":
                return 1 == b ? 0 : 2 == b ? 1 : 7 > b ? 2 : 11 > b ? 3 : 4;
            case "ar":
                return 0 == b ? 0 : 1 == b ? 1 : 2 == b ? 2 : b % 100 >= 3 && 10 >= b % 100 ? 3 : b % 100 >= 11 ? 4 : 5;
            default:
                return 1 != b ? 1 : 0
        }
    }
});
